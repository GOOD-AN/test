name: Executable Build

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3

      # Compilation
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          architecture: 'x64'
          cache: 'pip'

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Python Dependencies (macOS)
        if: ${{ runner.os == 'macOS' }}
        run: |
          pip install imageio

      - name: Install LLVM & UPX & ccache (macOS)
        if: ${{ runner.os == 'macOS' }}
        run: |
          wget https://github.com/Homebrew/homebrew-core/raw/0ed3ec35c0071ac53f4335b51e1e7a80489b4f25/Formula/upx.rb
          brew install upx.rb
          brew install ccache

      - name: Build (macOS)
        if: ${{ runner.os == 'macOS' }}
        uses: Nuitka/Nuitka-Action@main
        with:
          script-name: main.py
          show-scons: false
          standalone: true
          onefile: false
          output-file: meg-macos-x86_64
          enable-plugins: upx
          include-module: apscheduler.triggers.date
          include-data-dir: config=config
          macos-app-icon: data/images/logo_small.ico

      # Compressed Files
      - name: Install 7zip (macOS)
        if: ${{ runner.os == 'macOS' }}
        run: |
          brew install sevenzip

      - name: Compressed Files (Linux & macOS)
        if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
        run: |
          7zz a -tzip -mx=9 -mm=LZMA -mfb=258 -mmt=on ./build/meg-${{ runner.os }}-x86_64.zip ./build/main.dist/*

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: meg-${{ runner.os }}-x86_64
          path: |
            build/*.zip
